<?xml version="1.0" encoding="utf-8"?>
<!--

// Copyright (c) 2008 Madgex
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
// 
// OAuth.net uses the Common Service Locator interface, released under the MS-PL
// license. See "CommonServiceLocator License.txt" in the Licenses folder.
// 
// The examples and test cases use the Windsor Container from the Castle Project
// and Common Service Locator Windsor adaptor, released under the Apache License,
// Version 2.0. See "Castle Project License.txt" in the Licenses folder.
// 
// XRDS-Simple.net uses the HTMLAgility Pack. See "HTML Agility Pack License.txt"
// in the Licenses folder.
//
// Authors: Bruce Boughton, Chris Adams
// Website: http://lab.madgex.com/oauth-net/
// Email:   oauth-dot-net@madgex.com

-->
<!-- NB: This is the config file used by NUnit when running tests -->
<configuration>
	<configSections>
		<section name="oauth.net.serviceprovider" type="OAuth.Net.ServiceProvider.ServiceProviderSettings, OAuth.Net.ServiceProvider"/>
		<section name="oauth.net.components" type="Castle.Windsor.Configuration.AppDomain.CastleSectionHandler, Castle.Windsor" />
	</configSections>

	<oauth.net.serviceprovider
		AuthenticationRealm="http://example.com"
		AdvertiseOAuthSupport="true"
		ParameterSources="HttpAuthorizationHeader, HttpPostBody"/>

	<oauth.net.components>
		<components>

			<!-- Signing providers -->
			<component id="signing.provider:HMAC-SHA1" service="OAuth.Net.Common.ISigningProvider, OAuth.Net.Common"
					   type="OAuth.Net.Components.HmacSha1SigningProvider, OAuth.Net.Components" 
					   lifestyle="thread"/>

			<component id="signing.provider:PLAINTEXT" service="OAuth.Net.Common.ISigningProvider, OAuth.Net.Common"
					   type="OAuth.Net.Components.PlaintextSigningProvider, OAuth.Net.Components"
					   lifestyle="thread">
				<parameters>
					<requireSecureConnection>true</requireSecureConnection>
				</parameters>
			</component>

			<!-- TODO: Consumer store -->

			<!-- Request ID validator -->
			<component id="requestid.validator" service="OAuth.Net.Common.IRequestIdValidator, OAuth.Net.Common"
					   type="OAuth.Net.Components.InMemoryWindowedRequestIdValidator, OAuth.Net.Components"
					   lifestyle="singleton">
				<parameters>
					<windowSize>120</windowSize>
				</parameters>
			</component>

			<!-- Token generator -->
			<component id="token.generator" service="OAuth.Net.Common.ITokenGenerator, OAuth.Net.Common"
				type="OAuth.Net.Components.GuidTokenGenerator, OAuth.Net.Components"
				lifestyle="singleton"/>

		</components>
	</oauth.net.components>

</configuration>